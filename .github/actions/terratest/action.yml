name: "Terratest"
description: "Runs Terratest for a specified path."
inputs:
  tf_version:
    description: "TF version used."
    required: true
  path:
    description: "Path to Terraform module."
    required: true
  terratest_action:
    description: The action (name of a test in Terratest) that will be passed to the Makefile's ACTION parameter
    type: string
    required: true
  pr-id:
    description: A PR number. Optional value, you might want to use it to prefix resources created for a particular PR to identify them easily.
    type: string
    default: ""
    required: false

runs:
  using: "composite"
  steps:
    - name: setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}
        terraform_wrapper: false

    - name: setup Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.20"

    - name: login to GCP
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.GCP_SERVICE_ACCOUNT}}

    - name: Set up Cloud SDK
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: "512.0.0"

    - name: Install beta gcloud components
      shell: bash
      run: gcloud components install beta --quiet

    - name: Elevate permissions
      shell: bash
      id: elevate_permissions
      env:
        ORG_ID: ${{ env.ORG_ID }}
      run: |
        OUTPUT=$(gcloud beta pam grants create \
          --entitlement=custom-network-security-endpoint-admin-auto \
          --location=global \
          --organization="$ORG_ID" \
          --requested-duration=3600s \
          --justification="On demand Idempotence on repo ${{ github.repository }} test for PR - (#${{ github.event.inputs.pr-id }}) ${{ github.event.inputs.pr-title }}")

        echo "DEBUG OUTPUT:"
        echo "$OUTPUT"

        GRANT_ID=$(echo "$OUTPUT" | sed -n 's/Created \[\(.*\)\]/\1/p' | sed 's/\.$//')
        echo "GRANT_ID=$GRANT_ID"

        echo "GRANT_ID=$GRANT_ID" >> $GITHUB_OUTPUT

    - name: ${{ inputs.terratest_action }} infrastructure
      env:
        TPATH: ${{ inputs.path }}
        ACTION: ${{ inputs.terratest_action }}
        PRID: ${{ inputs.pr-id }}
        PROJECT_ID: ${{ env.PROJECT_ID }}
        ORG_ID: ${{ env.ORG_ID }}
      shell: bash
      run: make $TPATH ACTION=$ACTION

    - name: Revoke elevated permissions
      shell: bash
      env:
        ORG_ID: ${{ env.ORG_ID }}
      run: |
        gcloud beta pam grants revoke ${{ steps.elevate_permissions.outputs.GRANT_ID }} --reason "Finished example Idempotence test on repo ${{ github.repository }} test for PR - (#${{ github.event.inputs.pr-id }}) ${{ github.event.inputs.pr-title }}"
      if: ${{ failure() }} || ${{ success() }}
